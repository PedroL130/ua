// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "11/20/2022 14:17:11"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module decoderdemo2 (
	y0,
	e1,
	e0,
	x1,
	x2,
	y1,
	y3,
	y2);
output 	y0;
input 	e1;
input 	e0;
input 	x1;
input 	x2;
output 	y1;
output 	y3;
output 	y2;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \y0~output_o ;
wire \y1~output_o ;
wire \y3~output_o ;
wire \y2~output_o ;
wire \e1~input_o ;
wire \x2~input_o ;
wire \x1~input_o ;
wire \e0~input_o ;
wire \inst|inst~combout ;
wire \inst|inst1~combout ;
wire \inst|inst3~combout ;
wire \inst|inst2~combout ;


cycloneive_io_obuf \y0~output (
	.i(\inst|inst~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y0~output_o ),
	.obar());
// synopsys translate_off
defparam \y0~output .bus_hold = "false";
defparam \y0~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \y1~output (
	.i(\inst|inst1~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y1~output_o ),
	.obar());
// synopsys translate_off
defparam \y1~output .bus_hold = "false";
defparam \y1~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \y3~output (
	.i(\inst|inst3~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y3~output_o ),
	.obar());
// synopsys translate_off
defparam \y3~output .bus_hold = "false";
defparam \y3~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \y2~output (
	.i(\inst|inst2~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y2~output_o ),
	.obar());
// synopsys translate_off
defparam \y2~output .bus_hold = "false";
defparam \y2~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \e1~input (
	.i(e1),
	.ibar(gnd),
	.o(\e1~input_o ));
// synopsys translate_off
defparam \e1~input .bus_hold = "false";
defparam \e1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \x2~input (
	.i(x2),
	.ibar(gnd),
	.o(\x2~input_o ));
// synopsys translate_off
defparam \x2~input .bus_hold = "false";
defparam \x2~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \x1~input (
	.i(x1),
	.ibar(gnd),
	.o(\x1~input_o ));
// synopsys translate_off
defparam \x1~input .bus_hold = "false";
defparam \x1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \e0~input (
	.i(e0),
	.ibar(gnd),
	.o(\e0~input_o ));
// synopsys translate_off
defparam \e0~input .bus_hold = "false";
defparam \e0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst (
// Equation(s):
// \inst|inst~combout  = (\e1~input_o  & (!\x2~input_o  & (!\x1~input_o  & !\e0~input_o )))

	.dataa(\e1~input_o ),
	.datab(\x2~input_o ),
	.datac(\x1~input_o ),
	.datad(\e0~input_o ),
	.cin(gnd),
	.combout(\inst|inst~combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst .lut_mask = 16'h0002;
defparam \inst|inst .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst1 (
// Equation(s):
// \inst|inst1~combout  = (\x2~input_o  & (\e1~input_o  & (!\x1~input_o  & !\e0~input_o )))

	.dataa(\x2~input_o ),
	.datab(\e1~input_o ),
	.datac(\x1~input_o ),
	.datad(\e0~input_o ),
	.cin(gnd),
	.combout(\inst|inst1~combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1 .lut_mask = 16'h0008;
defparam \inst|inst1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst3 (
// Equation(s):
// \inst|inst3~combout  = (\x2~input_o  & (\x1~input_o  & (\e1~input_o  & !\e0~input_o )))

	.dataa(\x2~input_o ),
	.datab(\x1~input_o ),
	.datac(\e1~input_o ),
	.datad(\e0~input_o ),
	.cin(gnd),
	.combout(\inst|inst3~combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst3 .lut_mask = 16'h0080;
defparam \inst|inst3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst2 (
// Equation(s):
// \inst|inst2~combout  = (\x1~input_o  & (\e1~input_o  & (!\x2~input_o  & !\e0~input_o )))

	.dataa(\x1~input_o ),
	.datab(\e1~input_o ),
	.datac(\x2~input_o ),
	.datad(\e0~input_o ),
	.cin(gnd),
	.combout(\inst|inst2~combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst2 .lut_mask = 16'h0008;
defparam \inst|inst2 .sum_lutc_input = "datac";
// synopsys translate_on

assign y0 = \y0~output_o ;

assign y1 = \y1~output_o ;

assign y3 = \y3~output_o ;

assign y2 = \y2~output_o ;

endmodule
